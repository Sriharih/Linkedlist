#include<stdio.h>
#include<stdlib.h>
struct tony
{
   int num;
   struct tony*next;
};
typedef struct tony node;
node*head=NULL;
void insertatbeginning(int data)
{
    node*newnode=(node*)malloc(sizeof(node));
    newnode->num=data;
    if(head==NULL)
    {
        newnode->next=NULL;
        head=newnode;
    }
    else
    {
        newnode->next=head;
        head=newnode;
    }
}
void display()
{
    node*temp=head;
    if(head==NULL)
    {
        printf("nothing to print here");
    }   
    while(temp!=NULL)
    {
        printf("%d \n",temp->num);
        temp=temp->next;
    }
}
void insertatposition(int pos,int data)
{
    int i;
    node*newnode=(node*)malloc(sizeof(node));
    newnode->num=data;
    node*temp=head;
    for(i=1;i<=pos-1;i++)
    {
        temp=temp->next;
        if(temp==NULL)
        {
            printf("set aagadhu");
            return;
        }
    }
    newnode->next=temp->next;
    temp->next=newnode;
}
void deleteatpos(int pos)
{
    int i;
    node*temp=head;
    node*prev;
    if(pos==0)
    {
        head=head->next;
        printf("deleted value : %d\n",temp->num);
        free(temp);
        return;
    }
    for(i=0;i<pos;i++)
    {
        prev=temp;
        temp=temp->next;
    }
    prev->next=temp->next;
    printf("deleted value : %d\n",temp->num);
    free(temp);
}
void reverse()
{
    node*prev=NULL;
    node*current=head;
    node*next=head->next;
    while(current!=NULL)
    {
        next=current->next;
        current->next=prev;
        prev=current;
        current=next;
    }
    head=prev;
}
void insertatend(int data)
{
    node*newnode=(node*)malloc(sizeof(node));
    newnode->num=data;
    newnode->next=NULL;
    node*temp=head;
    if(head==NULL)
    {
       printf("no previos data");
    }
    while(temp->next!=NULL)
    {
        temp=temp->next;
    }
    temp->next=newnode;
}
int main()
{
    printf("Linked List problem : \n");
    int choice,data,pos;
    while(1)
    {
        printf("1.insert at beginning\n2.display\n3.exit\n4.insert at position\n5.delete\n6.reverse\n7.insert at end\n");
        scanf("%d",&choice);
        switch (choice)
        {
        case 1:
            printf("Eneter a data :");
             scanf("%d",&data);
             insertatbeginning(data);
            break;
        case 2:
             display();
             break;
        case 3:
             exit(0);
             break;
        case 4:
            printf("Eneter a data :");
            scanf("%d",&data);
            printf("enter a position :");
            scanf("%d",&pos);
            if(pos==0)
            {
                insertatbeginning(data);
            }
            else
            {
                insertatposition(pos,data);
            }
            break;
        case 5:
            printf("enter a position :");
            scanf("%d",&pos);
            deleteatpos(pos);
            break;
        case 6:
            reverse();
            display();
            break;
        case 7:
            printf("Eneter a data :");
            scanf("%d",&data);
            insertatend(data);
            display();
            break;
        default:
            printf("Wrong choice :");
            break;
        }
    }
    return 0;
